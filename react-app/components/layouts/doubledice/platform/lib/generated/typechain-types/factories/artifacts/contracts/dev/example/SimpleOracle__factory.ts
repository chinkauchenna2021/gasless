/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleOracle,
  SimpleOracleInterface,
} from "../../../../../artifacts/contracts/dev/example/SimpleOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DoubleDiceProtocol",
        name: "protocol",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UnauthorizedMsgSender",
    type: "error",
  },
  {
    inputs: [],
    name: "PROTOCOL",
    outputs: [
      {
        internalType: "contract DoubleDiceProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "betaOf",
    outputs: [
      {
        internalType: "UFixed32x6",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vfId",
        type: "uint256",
      },
      {
        internalType: "uint8[]",
        name: "outcomeIndexes",
        type: "uint8[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "optionalDeadline",
        type: "uint256",
      },
    ],
    name: "commitToVirtualFloor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "vfId",
            type: "uint256",
          },
          {
            internalType: "UFixed256x18",
            name: "betaOpen_e18",
            type: "uint256",
          },
          {
            internalType: "UFixed256x18",
            name: "totalFeeRate_e18",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "tOpen",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "tClose",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "tResolve",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "nOutcomes",
            type: "uint8",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bonusAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionalMinCommitmentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionalMaxCommitmentAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "version",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct EncodedVirtualFloorMetadata",
            name: "metadata",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct VirtualFloorCreationParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createVirtualFloor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onVirtualFloorConclusion",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vfId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "winningOutcomeIndex",
        type: "uint8",
      },
    ],
    name: "resolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a2c380380610a2c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161097f6100ad6000396000818160a7015281816101810152818161020201528181610282015281816102dc01526103ac015261097f6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80637b4b0d4514610067578063808047e81461007c5780638174e7f81461008f57806391b9b827146100a25780639c0e1608146100e6578063e92f306c146100f9575b600080fd5b61007a61007536600461040d565b610127565b005b61007a61008a36600461053c565b6101eb565b61007a61009d36600461060f565b610277565b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a6100f4366004610628565b6102c3565b610112610107366004610654565b620f42409392505050565b60405163ffffffff90911681526020016100dd565b6101396101a0820161018083016106a9565b6001600160a01b0316336001600160a01b03161461016a5760405163b4ee3af160e01b815260040160405180910390fd5b604051637b4b0d4560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b4b0d45906101b6908490600401610775565b600060405180830381600087803b1580156101d057600080fd5b505af11580156101e4573d6000803e3d6000fd5b5050505050565b60405163912217f360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063912217f39061023f908790339088908890889060040161088a565b600060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b5050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c05760405163b4ee3af160e01b815260040160405180910390fd5b50565b6040516340437e8560e11b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638086fd0a90602401602060405180830381865afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f919061092c565b9050336001600160a01b0382161461037a5760405163b4ee3af160e01b815260040160405180910390fd5b60405163636572db60e01b815260048101849052600160ff84161b60248201526001600160a01b0382811660448301527f0000000000000000000000000000000000000000000000000000000000000000169063636572db90606401600060405180830381600087803b1580156103f057600080fd5b505af1158015610404573d6000803e3d6000fd5b50505050505050565b60006020828403121561041f57600080fd5b813567ffffffffffffffff81111561043657600080fd5b82016101a0818503121561044957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561048f5761048f610450565b604052919050565b600067ffffffffffffffff8211156104b1576104b1610450565b5060051b60200190565b803560ff811681146104cc57600080fd5b919050565b600082601f8301126104e257600080fd5b813560206104f76104f283610497565b610466565b82815260059290921b8401810191818101908684111561051657600080fd5b8286015b84811015610531578035835291830191830161051a565b509695505050505050565b6000806000806080858703121561055257600080fd5b8435935060208086013567ffffffffffffffff8082111561057257600080fd5b818801915088601f83011261058657600080fd5b81356105946104f282610497565b81815260059190911b8301840190848101908b8311156105b357600080fd5b938501935b828510156105d8576105c9856104bb565b825293850193908501906105b8565b9750505060408801359250808311156105f057600080fd5b50506105fe878288016104d1565b949793965093946060013593505050565b60006020828403121561062157600080fd5b5035919050565b6000806040838503121561063b57600080fd5b8235915061064b602084016104bb565b90509250929050565b60008060006060848603121561066957600080fd5b83359250610679602085016104bb565b9150604084013590509250925092565b6001600160a01b03811681146102c057600080fd5b80356104cc81610689565b6000602082840312156106bb57600080fd5b813561044981610689565b803563ffffffff811681146104cc57600080fd5b60008235603e198336030181126106f057600080fd5b90910192915050565b8035825260006020820135601e1983360301811261071657600080fd5b8201803567ffffffffffffffff81111561072f57600080fd5b80360384131561073e57600080fd5b60406020860152806040860152806020830160608701376000606082870101526060601f19601f8301168601019250505092915050565b6020815281356020820152602082013560408201526040820135606082015260006107a2606084016106c6565b63ffffffff81166080840152506107bb608084016106c6565b63ffffffff811660a0840152506107d460a084016106c6565b63ffffffff811660c0840152506107ed60c084016104bb565b60ff811660e08401525061080360e0840161069e565b61010061081a818501836001600160a01b03169052565b61012091508085013582850152506101408185013581850152610160915080850135828501525061084d818501856106da565b90506101a061018081818601526108686101c08601846106f9565b925061087581870161069e565b6001600160a01b031691909401529392505050565b8581526001600160a01b03851660208083019190915260a06040830181905285519083018190526000918681019160c0850190845b818110156108de57845160ff16835293830193918301916001016108bf565b50508481036060860152865180825290820192508187019060005b81811015610915578251855293830193918301916001016108f9565b505050506080929092019290925295945050505050565b60006020828403121561093e57600080fd5b81516104498161068956fea264697066735822122011fc021ceb6957befee6461f29fc38d384312e788dcdc11bace09dbb105801e864736f6c634300080c0033";

type SimpleOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOracle__factory extends ContractFactory {
  constructor(...args: SimpleOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    protocol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleOracle> {
    return super.deploy(protocol, overrides || {}) as Promise<SimpleOracle>;
  }
  override getDeployTransaction(
    protocol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(protocol, overrides || {});
  }
  override attach(address: string): SimpleOracle {
    return super.attach(address) as SimpleOracle;
  }
  override connect(signer: Signer): SimpleOracle__factory {
    return super.connect(signer) as SimpleOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOracleInterface {
    return new utils.Interface(_abi) as SimpleOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleOracle {
    return new Contract(address, _abi, signerOrProvider) as SimpleOracle;
  }
}
